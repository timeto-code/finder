name: New Release Branch

on:
  workflow_dispatch:
    # inputs:
    #   branch_name:
    #     description: Release branch name to create
    #     required: true
    #     type: string
    #   package_version:
    #     description: Release package version
    #     required: true
    #     type: string

run-name: ${{ github.workflow }}

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Read version from package.json
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "BRANCH_NAME=release/v$VERSION" >> $GITHUB_ENV

      - name: Create and push release branch and tag
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git config user.email "timeto-bot@origin.com"
          git config user.name "timeto-bot"
          git commit --allow-empty -m "Release version ${{ env.PACKAGE_VERSION }}"
          git tag "v${{ env.PACKAGE_VERSION }}"
          git push origin ${{ env.BRANCH_NAME }}
          git push origin "v${{ env.PACKAGE_VERSION }}"

      # - run: |
      #     git checkout -b ${{ inputs.branch_name }}
      #     sed -i -e 's/"version": ".*"/"version": "${{ inputs.package_version }}"/g' package.json
      #     npm ci
      #     npm install # update package-lock.json to ensure the version bump is included
      #     git diff
      #     git add package.json package-lock.json
      #     git config user.email "timeto-bot@origin.com"
      #     git config user.name "timeto-bot"
      #     git commit -m 'Bump version to ${{ inputs.package_version }}'
      #     git tag v${{ inputs.package_version }}
      #     git push --set-upstream origin ${{ inputs.branch_name }}
      #     git push origin v${{ inputs.package_version }}
